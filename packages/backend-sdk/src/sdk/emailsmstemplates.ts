/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { emailSMSTemplatesGet } from '../funcs/emailSMSTemplatesGet.js';
import { emailSMSTemplatesList } from '../funcs/emailSMSTemplatesList.js';
import { emailSMSTemplatesRevert } from '../funcs/emailSMSTemplatesRevert.js';
import { emailSMSTemplatesToggleTemplateDelivery } from '../funcs/emailSMSTemplatesToggleTemplateDelivery.js';
import { ClientSDK, RequestOptions } from '../lib/sdks.js';
import * as components from '../models/components/index.js';
import * as operations from '../models/operations/index.js';
import { unwrapAsync } from '../types/fp.js';

export class EmailSMSTemplates extends ClientSDK {
  /**
   * List all templates
   *
   * @remarks
   * Returns a list of all templates.
   * The templates are returned sorted by position.
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async list(
    request: operations.GetTemplateListRequest,
    options?: RequestOptions,
  ): Promise<Array<components.Template>> {
    return unwrapAsync(emailSMSTemplatesList(this, request, options));
  }

  /**
   * Retrieve a template
   *
   * @remarks
   * Returns the details of a template
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async get(request: operations.GetTemplateRequest, options?: RequestOptions): Promise<components.Template> {
    return unwrapAsync(emailSMSTemplatesGet(this, request, options));
  }

  /**
   * Revert a template
   *
   * @remarks
   * Reverts an updated template to its default state
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async revert(request: operations.RevertTemplateRequest, options?: RequestOptions): Promise<components.Template> {
    return unwrapAsync(emailSMSTemplatesRevert(this, request, options));
  }

  /**
   * Toggle the delivery by Clerk for a template of a given type and slug
   *
   * @remarks
   * Toggles the delivery by Clerk for a template of a given type and slug.
   * If disabled, Clerk will not deliver the resulting email or SMS.
   * The app developer will need to listen to the `email.created` or `sms.created` webhooks in order to handle delivery themselves.
   *
   * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  async toggleTemplateDelivery(
    request: operations.ToggleTemplateDeliveryRequest,
    options?: RequestOptions,
  ): Promise<components.Template> {
    return unwrapAsync(emailSMSTemplatesToggleTemplateDelivery(this, request, options));
  }
}
