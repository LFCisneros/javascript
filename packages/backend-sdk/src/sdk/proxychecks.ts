/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { proxyChecksVerify } from '../funcs/proxyChecksVerify.js';
import { ClientSDK, RequestOptions } from '../lib/sdks.js';
import * as components from '../models/components/index.js';
import * as operations from '../models/operations/index.js';
import { unwrapAsync } from '../types/fp.js';

export class ProxyChecks extends ClientSDK {
  /**
   * Verify the proxy configuration for your domain
   *
   * @remarks
   * This endpoint can be used to validate that a proxy-enabled domain is operational.
   * It tries to verify that the proxy URL provided in the parameters maps to a functional proxy that can reach the Clerk Frontend API.
   *
   * You can use this endpoint before you set a proxy URL for a domain. This way you can ensure that switching to proxy-based
   * configuration will not lead to downtime for your instance.
   *
   * The `proxy_url` parameter allows for testing proxy configurations for domains that don't have a proxy URL yet, or operate on
   * a different proxy URL than the one provided. It can also be used to re-validate a domain that is already configured to work with a proxy.
   */
  async verify(
    request?: operations.VerifyDomainProxyRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<components.ProxyCheck> {
    return unwrapAsync(proxyChecksVerify(this, request, options));
  }
}
