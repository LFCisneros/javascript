/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { allowlistIdentifiersCreate } from "../funcs/allowlistIdentifiersCreate.js";
import { allowlistIdentifiersDelete } from "../funcs/allowlistIdentifiersDelete.js";
import { allowlistIdentifiersList } from "../funcs/allowlistIdentifiersList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AllowlistIdentifiers extends ClientSDK {
  /**
   * List all identifiers on the allow-list
   *
   * @remarks
   * Get a list of all identifiers allowed to sign up to an instance
   */
  async list(
    request: operations.ListAllowlistIdentifiersRequest,
    options?: RequestOptions,
  ): Promise<Array<components.AllowlistIdentifier>> {
    return unwrapAsync(allowlistIdentifiersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Add identifier to the allow-list
   *
   * @remarks
   * Create an identifier allowed to sign up to an instance
   */
  async create(
    request?: operations.CreateAllowlistIdentifierRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<components.AllowlistIdentifier> {
    return unwrapAsync(allowlistIdentifiersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete identifier from allow-list
   *
   * @remarks
   * Delete an identifier from the instance allow-list
   */
  async delete(
    request: operations.DeleteAllowlistIdentifierRequest,
    options?: RequestOptions,
  ): Promise<components.DeletedObject> {
    return unwrapAsync(allowlistIdentifiersDelete(
      this,
      request,
      options,
    ));
  }
}
