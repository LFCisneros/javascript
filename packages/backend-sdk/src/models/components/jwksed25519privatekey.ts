/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const JWKSEd25519PrivateKeyKty = {
  Okp: "OKP",
} as const;
export type JWKSEd25519PrivateKeyKty = ClosedEnum<
  typeof JWKSEd25519PrivateKeyKty
>;

export const JWKSEd25519PrivateKeyCrv = {
  Ed25519: "Ed25519",
} as const;
export type JWKSEd25519PrivateKeyCrv = ClosedEnum<
  typeof JWKSEd25519PrivateKeyCrv
>;

export type JWKSEd25519PrivateKey = {
  kid: string;
  alg: string;
  use: string;
  kty: JWKSEd25519PrivateKeyKty;
  crv: JWKSEd25519PrivateKeyCrv;
  x: string;
  d: string;
  x5c?: Array<string> | undefined;
  x5t?: string | undefined;
  x5tNumberS256?: string | undefined;
  x5u?: string | undefined;
};

/** @internal */
export const JWKSEd25519PrivateKeyKty$inboundSchema: z.ZodNativeEnum<
  typeof JWKSEd25519PrivateKeyKty
> = z.nativeEnum(JWKSEd25519PrivateKeyKty);

/** @internal */
export const JWKSEd25519PrivateKeyKty$outboundSchema: z.ZodNativeEnum<
  typeof JWKSEd25519PrivateKeyKty
> = JWKSEd25519PrivateKeyKty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JWKSEd25519PrivateKeyKty$ {
  /** @deprecated use `JWKSEd25519PrivateKeyKty$inboundSchema` instead. */
  export const inboundSchema = JWKSEd25519PrivateKeyKty$inboundSchema;
  /** @deprecated use `JWKSEd25519PrivateKeyKty$outboundSchema` instead. */
  export const outboundSchema = JWKSEd25519PrivateKeyKty$outboundSchema;
}

/** @internal */
export const JWKSEd25519PrivateKeyCrv$inboundSchema: z.ZodNativeEnum<
  typeof JWKSEd25519PrivateKeyCrv
> = z.nativeEnum(JWKSEd25519PrivateKeyCrv);

/** @internal */
export const JWKSEd25519PrivateKeyCrv$outboundSchema: z.ZodNativeEnum<
  typeof JWKSEd25519PrivateKeyCrv
> = JWKSEd25519PrivateKeyCrv$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JWKSEd25519PrivateKeyCrv$ {
  /** @deprecated use `JWKSEd25519PrivateKeyCrv$inboundSchema` instead. */
  export const inboundSchema = JWKSEd25519PrivateKeyCrv$inboundSchema;
  /** @deprecated use `JWKSEd25519PrivateKeyCrv$outboundSchema` instead. */
  export const outboundSchema = JWKSEd25519PrivateKeyCrv$outboundSchema;
}

/** @internal */
export const JWKSEd25519PrivateKey$inboundSchema: z.ZodType<
  JWKSEd25519PrivateKey,
  z.ZodTypeDef,
  unknown
> = z.object({
  kid: z.string(),
  alg: z.string(),
  use: z.string(),
  kty: JWKSEd25519PrivateKeyKty$inboundSchema,
  crv: JWKSEd25519PrivateKeyCrv$inboundSchema,
  x: z.string(),
  d: z.string(),
  x5c: z.array(z.string()).optional(),
  x5t: z.string().optional(),
  "x5t#S256": z.string().optional(),
  x5u: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "x5t#S256": "x5tNumberS256",
  });
});

/** @internal */
export type JWKSEd25519PrivateKey$Outbound = {
  kid: string;
  alg: string;
  use: string;
  kty: string;
  crv: string;
  x: string;
  d: string;
  x5c?: Array<string> | undefined;
  x5t?: string | undefined;
  "x5t#S256"?: string | undefined;
  x5u?: string | undefined;
};

/** @internal */
export const JWKSEd25519PrivateKey$outboundSchema: z.ZodType<
  JWKSEd25519PrivateKey$Outbound,
  z.ZodTypeDef,
  JWKSEd25519PrivateKey
> = z.object({
  kid: z.string(),
  alg: z.string(),
  use: z.string(),
  kty: JWKSEd25519PrivateKeyKty$outboundSchema,
  crv: JWKSEd25519PrivateKeyCrv$outboundSchema,
  x: z.string(),
  d: z.string(),
  x5c: z.array(z.string()).optional(),
  x5t: z.string().optional(),
  x5tNumberS256: z.string().optional(),
  x5u: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    x5tNumberS256: "x5t#S256",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JWKSEd25519PrivateKey$ {
  /** @deprecated use `JWKSEd25519PrivateKey$inboundSchema` instead. */
  export const inboundSchema = JWKSEd25519PrivateKey$inboundSchema;
  /** @deprecated use `JWKSEd25519PrivateKey$outboundSchema` instead. */
  export const outboundSchema = JWKSEd25519PrivateKey$outboundSchema;
  /** @deprecated use `JWKSEd25519PrivateKey$Outbound` instead. */
  export type Outbound = JWKSEd25519PrivateKey$Outbound;
}

export function jwksEd25519PrivateKeyToJSON(
  jwksEd25519PrivateKey: JWKSEd25519PrivateKey,
): string {
  return JSON.stringify(
    JWKSEd25519PrivateKey$outboundSchema.parse(jwksEd25519PrivateKey),
  );
}

export function jwksEd25519PrivateKeyFromJSON(
  jsonString: string,
): SafeParseResult<JWKSEd25519PrivateKey, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JWKSEd25519PrivateKey$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JWKSEd25519PrivateKey' from JSON`,
  );
}
