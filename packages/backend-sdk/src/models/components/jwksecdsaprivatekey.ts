/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const JWKSEcdsaPrivateKeyKty = {
  Ec: "EC",
} as const;
export type JWKSEcdsaPrivateKeyKty = ClosedEnum<typeof JWKSEcdsaPrivateKeyKty>;

export type JWKSEcdsaPrivateKey = {
  kid: string;
  alg: string;
  use: string;
  kty: JWKSEcdsaPrivateKeyKty;
  crv: string;
  x: string;
  y: string;
  d: string;
  x5c?: Array<string> | undefined;
  x5t?: string | undefined;
  x5tNumberS256?: string | undefined;
  x5u?: string | undefined;
};

/** @internal */
export const JWKSEcdsaPrivateKeyKty$inboundSchema: z.ZodNativeEnum<
  typeof JWKSEcdsaPrivateKeyKty
> = z.nativeEnum(JWKSEcdsaPrivateKeyKty);

/** @internal */
export const JWKSEcdsaPrivateKeyKty$outboundSchema: z.ZodNativeEnum<
  typeof JWKSEcdsaPrivateKeyKty
> = JWKSEcdsaPrivateKeyKty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JWKSEcdsaPrivateKeyKty$ {
  /** @deprecated use `JWKSEcdsaPrivateKeyKty$inboundSchema` instead. */
  export const inboundSchema = JWKSEcdsaPrivateKeyKty$inboundSchema;
  /** @deprecated use `JWKSEcdsaPrivateKeyKty$outboundSchema` instead. */
  export const outboundSchema = JWKSEcdsaPrivateKeyKty$outboundSchema;
}

/** @internal */
export const JWKSEcdsaPrivateKey$inboundSchema: z.ZodType<
  JWKSEcdsaPrivateKey,
  z.ZodTypeDef,
  unknown
> = z.object({
  kid: z.string(),
  alg: z.string(),
  use: z.string(),
  kty: JWKSEcdsaPrivateKeyKty$inboundSchema,
  crv: z.string(),
  x: z.string(),
  y: z.string(),
  d: z.string(),
  x5c: z.array(z.string()).optional(),
  x5t: z.string().optional(),
  "x5t#S256": z.string().optional(),
  x5u: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "x5t#S256": "x5tNumberS256",
  });
});

/** @internal */
export type JWKSEcdsaPrivateKey$Outbound = {
  kid: string;
  alg: string;
  use: string;
  kty: string;
  crv: string;
  x: string;
  y: string;
  d: string;
  x5c?: Array<string> | undefined;
  x5t?: string | undefined;
  "x5t#S256"?: string | undefined;
  x5u?: string | undefined;
};

/** @internal */
export const JWKSEcdsaPrivateKey$outboundSchema: z.ZodType<
  JWKSEcdsaPrivateKey$Outbound,
  z.ZodTypeDef,
  JWKSEcdsaPrivateKey
> = z.object({
  kid: z.string(),
  alg: z.string(),
  use: z.string(),
  kty: JWKSEcdsaPrivateKeyKty$outboundSchema,
  crv: z.string(),
  x: z.string(),
  y: z.string(),
  d: z.string(),
  x5c: z.array(z.string()).optional(),
  x5t: z.string().optional(),
  x5tNumberS256: z.string().optional(),
  x5u: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    x5tNumberS256: "x5t#S256",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JWKSEcdsaPrivateKey$ {
  /** @deprecated use `JWKSEcdsaPrivateKey$inboundSchema` instead. */
  export const inboundSchema = JWKSEcdsaPrivateKey$inboundSchema;
  /** @deprecated use `JWKSEcdsaPrivateKey$outboundSchema` instead. */
  export const outboundSchema = JWKSEcdsaPrivateKey$outboundSchema;
  /** @deprecated use `JWKSEcdsaPrivateKey$Outbound` instead. */
  export type Outbound = JWKSEcdsaPrivateKey$Outbound;
}

export function jwksEcdsaPrivateKeyToJSON(
  jwksEcdsaPrivateKey: JWKSEcdsaPrivateKey,
): string {
  return JSON.stringify(
    JWKSEcdsaPrivateKey$outboundSchema.parse(jwksEcdsaPrivateKey),
  );
}

export function jwksEcdsaPrivateKeyFromJSON(
  jsonString: string,
): SafeParseResult<JWKSEcdsaPrivateKey, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JWKSEcdsaPrivateKey$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JWKSEcdsaPrivateKey' from JSON`,
  );
}
