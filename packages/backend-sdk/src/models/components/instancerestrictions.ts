/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export const InstanceRestrictionsObject = {
  InstanceRestrictions: "instance_restrictions",
} as const;
/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type InstanceRestrictionsObject = ClosedEnum<
  typeof InstanceRestrictionsObject
>;

/**
 * Success
 */
export type InstanceRestrictions = {
  /**
   * String representing the object's type. Objects of the same type share the same value.
   */
  object: InstanceRestrictionsObject;
  allowlist: boolean;
  blocklist: boolean;
  blockEmailSubaddresses: boolean;
  blockDisposableEmailDomains: boolean;
  ignoreDotsForGmailAddresses: boolean;
};

/** @internal */
export const InstanceRestrictionsObject$inboundSchema: z.ZodNativeEnum<
  typeof InstanceRestrictionsObject
> = z.nativeEnum(InstanceRestrictionsObject);

/** @internal */
export const InstanceRestrictionsObject$outboundSchema: z.ZodNativeEnum<
  typeof InstanceRestrictionsObject
> = InstanceRestrictionsObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InstanceRestrictionsObject$ {
  /** @deprecated use `InstanceRestrictionsObject$inboundSchema` instead. */
  export const inboundSchema = InstanceRestrictionsObject$inboundSchema;
  /** @deprecated use `InstanceRestrictionsObject$outboundSchema` instead. */
  export const outboundSchema = InstanceRestrictionsObject$outboundSchema;
}

/** @internal */
export const InstanceRestrictions$inboundSchema: z.ZodType<
  InstanceRestrictions,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: InstanceRestrictionsObject$inboundSchema,
  allowlist: z.boolean(),
  blocklist: z.boolean(),
  block_email_subaddresses: z.boolean(),
  block_disposable_email_domains: z.boolean(),
  ignore_dots_for_gmail_addresses: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "block_email_subaddresses": "blockEmailSubaddresses",
    "block_disposable_email_domains": "blockDisposableEmailDomains",
    "ignore_dots_for_gmail_addresses": "ignoreDotsForGmailAddresses",
  });
});

/** @internal */
export type InstanceRestrictions$Outbound = {
  object: string;
  allowlist: boolean;
  blocklist: boolean;
  block_email_subaddresses: boolean;
  block_disposable_email_domains: boolean;
  ignore_dots_for_gmail_addresses: boolean;
};

/** @internal */
export const InstanceRestrictions$outboundSchema: z.ZodType<
  InstanceRestrictions$Outbound,
  z.ZodTypeDef,
  InstanceRestrictions
> = z.object({
  object: InstanceRestrictionsObject$outboundSchema,
  allowlist: z.boolean(),
  blocklist: z.boolean(),
  blockEmailSubaddresses: z.boolean(),
  blockDisposableEmailDomains: z.boolean(),
  ignoreDotsForGmailAddresses: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    blockEmailSubaddresses: "block_email_subaddresses",
    blockDisposableEmailDomains: "block_disposable_email_domains",
    ignoreDotsForGmailAddresses: "ignore_dots_for_gmail_addresses",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InstanceRestrictions$ {
  /** @deprecated use `InstanceRestrictions$inboundSchema` instead. */
  export const inboundSchema = InstanceRestrictions$inboundSchema;
  /** @deprecated use `InstanceRestrictions$outboundSchema` instead. */
  export const outboundSchema = InstanceRestrictions$outboundSchema;
  /** @deprecated use `InstanceRestrictions$Outbound` instead. */
  export type Outbound = InstanceRestrictions$Outbound;
}

export function instanceRestrictionsToJSON(
  instanceRestrictions: InstanceRestrictions,
): string {
  return JSON.stringify(
    InstanceRestrictions$outboundSchema.parse(instanceRestrictions),
  );
}

export function instanceRestrictionsFromJSON(
  jsonString: string,
): SafeParseResult<InstanceRestrictions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InstanceRestrictions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InstanceRestrictions' from JSON`,
  );
}
