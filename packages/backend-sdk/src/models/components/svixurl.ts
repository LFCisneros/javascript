/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Response that contains a temporary Svix URL to access management dashboard
 */
export type SvixURL = {
  svixUrl: string;
};

/** @internal */
export const SvixURL$inboundSchema: z.ZodType<SvixURL, z.ZodTypeDef, unknown> =
  z.object({
    svix_url: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "svix_url": "svixUrl",
    });
  });

/** @internal */
export type SvixURL$Outbound = {
  svix_url: string;
};

/** @internal */
export const SvixURL$outboundSchema: z.ZodType<
  SvixURL$Outbound,
  z.ZodTypeDef,
  SvixURL
> = z.object({
  svixUrl: z.string(),
}).transform((v) => {
  return remap$(v, {
    svixUrl: "svix_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SvixURL$ {
  /** @deprecated use `SvixURL$inboundSchema` instead. */
  export const inboundSchema = SvixURL$inboundSchema;
  /** @deprecated use `SvixURL$outboundSchema` instead. */
  export const outboundSchema = SvixURL$outboundSchema;
  /** @deprecated use `SvixURL$Outbound` instead. */
  export type Outbound = SvixURL$Outbound;
}

export function svixURLToJSON(svixURL: SvixURL): string {
  return JSON.stringify(SvixURL$outboundSchema.parse(svixURL));
}

export function svixURLFromJSON(
  jsonString: string,
): SafeParseResult<SvixURL, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SvixURL$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SvixURL' from JSON`,
  );
}
