/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from 'zod';
import { safeParse } from '../../lib/schemas.js';
import { Result as SafeParseResult } from '../../types/fp.js';
import { SDKValidationError } from '../errors/sdkvalidationerror.js';

export type DeleteRedirectURLRequest = {
  /**
   * The ID of the redirect URL
   */
  id: string;
};

/** @internal */
export const DeleteRedirectURLRequest$inboundSchema: z.ZodType<DeleteRedirectURLRequest, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string(),
  });

/** @internal */
export type DeleteRedirectURLRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteRedirectURLRequest$outboundSchema: z.ZodType<
  DeleteRedirectURLRequest$Outbound,
  z.ZodTypeDef,
  DeleteRedirectURLRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteRedirectURLRequest$ {
  /** @deprecated use `DeleteRedirectURLRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteRedirectURLRequest$inboundSchema;
  /** @deprecated use `DeleteRedirectURLRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteRedirectURLRequest$outboundSchema;
  /** @deprecated use `DeleteRedirectURLRequest$Outbound` instead. */
  export type Outbound = DeleteRedirectURLRequest$Outbound;
}

export function deleteRedirectURLRequestToJSON(deleteRedirectURLRequest: DeleteRedirectURLRequest): string {
  return JSON.stringify(DeleteRedirectURLRequest$outboundSchema.parse(deleteRedirectURLRequest));
}

export function deleteRedirectURLRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteRedirectURLRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    x => DeleteRedirectURLRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteRedirectURLRequest' from JSON`,
  );
}
