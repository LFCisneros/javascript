/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetRedirectURLRequest = {
  /**
   * The ID of the redirect URL
   */
  id: string;
};

/** @internal */
export const GetRedirectURLRequest$inboundSchema: z.ZodType<
  GetRedirectURLRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetRedirectURLRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetRedirectURLRequest$outboundSchema: z.ZodType<
  GetRedirectURLRequest$Outbound,
  z.ZodTypeDef,
  GetRedirectURLRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRedirectURLRequest$ {
  /** @deprecated use `GetRedirectURLRequest$inboundSchema` instead. */
  export const inboundSchema = GetRedirectURLRequest$inboundSchema;
  /** @deprecated use `GetRedirectURLRequest$outboundSchema` instead. */
  export const outboundSchema = GetRedirectURLRequest$outboundSchema;
  /** @deprecated use `GetRedirectURLRequest$Outbound` instead. */
  export type Outbound = GetRedirectURLRequest$Outbound;
}

export function getRedirectURLRequestToJSON(
  getRedirectURLRequest: GetRedirectURLRequest,
): string {
  return JSON.stringify(
    GetRedirectURLRequest$outboundSchema.parse(getRedirectURLRequest),
  );
}

export function getRedirectURLRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetRedirectURLRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRedirectURLRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRedirectURLRequest' from JSON`,
  );
}
