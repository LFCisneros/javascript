/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from 'zod';
import { remap as remap$ } from '../../lib/primitives.js';
import { safeParse } from '../../lib/schemas.js';
import { Result as SafeParseResult } from '../../types/fp.js';
import { SDKValidationError } from '../errors/sdkvalidationerror.js';

export type GetPhoneNumberRequest = {
  /**
   * The ID of the phone number to retrieve
   */
  phoneNumberId: string;
};

/** @internal */
export const GetPhoneNumberRequest$inboundSchema: z.ZodType<GetPhoneNumberRequest, z.ZodTypeDef, unknown> = z
  .object({
    phone_number_id: z.string(),
  })
  .transform(v => {
    return remap$(v, {
      phone_number_id: 'phoneNumberId',
    });
  });

/** @internal */
export type GetPhoneNumberRequest$Outbound = {
  phone_number_id: string;
};

/** @internal */
export const GetPhoneNumberRequest$outboundSchema: z.ZodType<
  GetPhoneNumberRequest$Outbound,
  z.ZodTypeDef,
  GetPhoneNumberRequest
> = z
  .object({
    phoneNumberId: z.string(),
  })
  .transform(v => {
    return remap$(v, {
      phoneNumberId: 'phone_number_id',
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPhoneNumberRequest$ {
  /** @deprecated use `GetPhoneNumberRequest$inboundSchema` instead. */
  export const inboundSchema = GetPhoneNumberRequest$inboundSchema;
  /** @deprecated use `GetPhoneNumberRequest$outboundSchema` instead. */
  export const outboundSchema = GetPhoneNumberRequest$outboundSchema;
  /** @deprecated use `GetPhoneNumberRequest$Outbound` instead. */
  export type Outbound = GetPhoneNumberRequest$Outbound;
}

export function getPhoneNumberRequestToJSON(getPhoneNumberRequest: GetPhoneNumberRequest): string {
  return JSON.stringify(GetPhoneNumberRequest$outboundSchema.parse(getPhoneNumberRequest));
}

export function getPhoneNumberRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPhoneNumberRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    x => GetPhoneNumberRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPhoneNumberRequest' from JSON`,
  );
}
