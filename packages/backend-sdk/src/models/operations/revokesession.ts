/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RevokeSessionRequest = {
  /**
   * The ID of the session
   */
  sessionId: string;
};

/** @internal */
export const RevokeSessionRequest$inboundSchema: z.ZodType<
  RevokeSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  session_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "session_id": "sessionId",
  });
});

/** @internal */
export type RevokeSessionRequest$Outbound = {
  session_id: string;
};

/** @internal */
export const RevokeSessionRequest$outboundSchema: z.ZodType<
  RevokeSessionRequest$Outbound,
  z.ZodTypeDef,
  RevokeSessionRequest
> = z.object({
  sessionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    sessionId: "session_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevokeSessionRequest$ {
  /** @deprecated use `RevokeSessionRequest$inboundSchema` instead. */
  export const inboundSchema = RevokeSessionRequest$inboundSchema;
  /** @deprecated use `RevokeSessionRequest$outboundSchema` instead. */
  export const outboundSchema = RevokeSessionRequest$outboundSchema;
  /** @deprecated use `RevokeSessionRequest$Outbound` instead. */
  export type Outbound = RevokeSessionRequest$Outbound;
}

export function revokeSessionRequestToJSON(
  revokeSessionRequest: RevokeSessionRequest,
): string {
  return JSON.stringify(
    RevokeSessionRequest$outboundSchema.parse(revokeSessionRequest),
  );
}

export function revokeSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<RevokeSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RevokeSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RevokeSessionRequest' from JSON`,
  );
}
