/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { signInTokensCreate } from '../../funcs/signInTokensCreate.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.CreateSignInTokenRequestBody$inboundSchema.optional(),
};

export const tool$signInTokensCreate: ToolDefinition<typeof args> = {
  name: 'sign-in-tokens-create',
  description: `Create sign-in token

Creates a new sign-in token and associates it with the given user.
By default, sign-in tokens expire in 30 days.
You can optionally supply a different duration in seconds using the \`expires_in_seconds\` property.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await signInTokensCreate(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
