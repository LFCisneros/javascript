/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersBan } from '../../funcs/usersBan.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.BanUserRequest$inboundSchema,
};

export const tool$usersBan: ToolDefinition<typeof args> = {
  name: 'users-ban',
  description: `Ban a user

Marks the given user as banned, which means that all their sessions are revoked and they are not allowed to sign in again.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await usersBan(client, args.request, { fetchOptions: { signal: ctx.signal } }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
