/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { waitlistEntriesCreate } from '../../funcs/waitlistEntriesCreate.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.CreateWaitlistEntryRequestBody$inboundSchema.optional(),
};

export const tool$waitlistEntriesCreate: ToolDefinition<typeof args> = {
  name: 'waitlist-entries-create',
  description: `Create a waitlist entry

Creates a new waitlist entry for the given email address.
If the email address is already on the waitlist, no new entry will be created and the existing waitlist entry will be returned.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await waitlistEntriesCreate(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
