/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { waitlistEntriesList } from '../../funcs/waitlistEntriesList.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.ListWaitlistEntriesRequest$inboundSchema,
};

export const tool$waitlistEntriesList: ToolDefinition<typeof args> = {
  name: 'waitlist-entries-list',
  description: `List all waitlist entries

Retrieve a list of waitlist entries for the instance.
Entries are ordered by creation date in descending order by default.
Supports filtering by email address or status and pagination with limit and offset parameters.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await waitlistEntriesList(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
