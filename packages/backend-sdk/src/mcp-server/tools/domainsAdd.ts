/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { domainsAdd } from '../../funcs/domainsAdd.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.AddDomainRequestBody$inboundSchema.optional(),
};

export const tool$domainsAdd: ToolDefinition<typeof args> = {
  name: 'domains-add',
  description: `Add a domain

Add a new domain for your instance.
Useful in the case of multi-domain instances, allows adding satellite domains to an instance.
The new domain must have a \`name\`. The domain name can contain the port for development instances, like \`localhost:3000\`.
At the moment, instances can have only one primary domain, so the \`is_satellite\` parameter must be set to \`true\`.
If you're planning to configure the new satellite domain to run behind a proxy, pass the \`proxy_url\` parameter accordingly.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await domainsAdd(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
