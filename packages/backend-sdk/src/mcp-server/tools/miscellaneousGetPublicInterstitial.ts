/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { miscellaneousGetPublicInterstitial } from '../../funcs/miscellaneousGetPublicInterstitial.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.GetPublicInterstitialRequest$inboundSchema,
};

export const tool$miscellaneousGetPublicInterstitial: ToolDefinition<typeof args> = {
  name: 'miscellaneous-get-public-interstitial',
  description: `Returns the markup for the interstitial page

The Clerk interstitial endpoint serves an html page that loads clerk.js in order to check the user's authentication state.
It is used by Clerk SDKs when the user's authentication state cannot be immediately determined.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await miscellaneousGetPublicInterstitial(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
