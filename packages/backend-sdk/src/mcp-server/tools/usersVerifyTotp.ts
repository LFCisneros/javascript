/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersVerifyTotp } from '../../funcs/usersVerifyTotp.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.VerifyTOTPRequest$inboundSchema,
};

export const tool$usersVerifyTotp: ToolDefinition<typeof args> = {
  name: 'users-verify-totp',
  description: `Verify a TOTP or backup code for a user

Verify that the provided TOTP or backup code is valid for the user.
Verifying a backup code will result it in being consumed (i.e. it will
become invalid).
Useful for custom auth flows and re-verification.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await usersVerifyTotp(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
