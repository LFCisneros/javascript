/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { organizationInvitationsListPending } from '../../funcs/organizationInvitationsListPending.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.ListPendingOrganizationInvitationsRequest$inboundSchema,
};

export const tool$organizationInvitationsListPending: ToolDefinition<typeof args> = {
  name: 'organization-invitations-list-pending',
  description: `Get a list of pending organization invitations

This request returns the list of organization invitations with "pending" status.
These are the organization invitations that can still be used to join the organization, but have not been accepted by the invited user yet.
Results can be paginated using the optional \`limit\` and \`offset\` query parameters.
The organization invitations are ordered by descending creation date.
Most recent invitations will be returned first.
Any invitations created as a result of an Organization Domain are not included in the results.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await organizationInvitationsListPending(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
