/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { invitationsRevoke } from '../../funcs/invitationsRevoke.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.RevokeInvitationRequest$inboundSchema,
};

export const tool$invitationsRevoke: ToolDefinition<typeof args> = {
  name: 'invitations-revoke',
  description: `Revokes an invitation

Revokes the given invitation.
Revoking an invitation will prevent the user from using the invitation link that was sent to them.
However, it doesn't prevent the user from signing up if they follow the sign up flow.
Only active (i.e. non-revoked) invitations can be revoked.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await invitationsRevoke(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
