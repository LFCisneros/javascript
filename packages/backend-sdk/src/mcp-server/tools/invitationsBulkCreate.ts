/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from 'zod';
import { invitationsBulkCreate } from '../../funcs/invitationsBulkCreate.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: z.array(operations.RequestBody$inboundSchema).optional(),
};

export const tool$invitationsBulkCreate: ToolDefinition<typeof args> = {
  name: 'invitations-bulk-create',
  description: `Create multiple invitations

Use this API operation to create multiple invitations for the provided email addresses. You can choose to send the
invitations as emails by setting the \`notify\` parameter to \`true\`. There cannot be an existing invitation for any
of the email addresses you provide unless you set \`ignore_existing\` to \`true\` for specific email addresses. Please
note that there must be no existing user for any of the email addresses you provide, and this rule cannot be bypassed.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await invitationsBulkCreate(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
