/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { invitationsCreate } from '../../funcs/invitationsCreate.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.CreateInvitationRequestBody$inboundSchema.optional(),
};

export const tool$invitationsCreate: ToolDefinition<typeof args> = {
  name: 'invitations-create',
  description: `Create an invitation

Creates a new invitation for the given email address and sends the invitation email.
Keep in mind that you cannot create an invitation if there is already one for the given email address.
Also, trying to create an invitation for an email address that already exists in your application will result to an error.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await invitationsCreate(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
