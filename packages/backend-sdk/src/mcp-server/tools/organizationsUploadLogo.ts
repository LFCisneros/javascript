/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { organizationsUploadLogo } from '../../funcs/organizationsUploadLogo.js';
import * as operations from '../../models/operations/index.js';
import { formatResult, ToolDefinition } from '../tools.js';

const args = {
  request: operations.UploadOrganizationLogoRequest$inboundSchema,
};

export const tool$organizationsUploadLogo: ToolDefinition<typeof args> = {
  name: 'organizations-upload-logo',
  description: `Upload a logo for the organization

Set or replace an organization's logo, by uploading an image file.
This endpoint uses the \`multipart/form-data\` request content type and accepts a file of image type.
The file size cannot exceed 10MB.
Only the following file content types are supported: \`image/jpeg\`, \`image/png\`, \`image/gif\`, \`image/webp\`, \`image/x-icon\`, \`image/vnd.microsoft.icon\`.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await organizationsUploadLogo(client, args.request, {
      fetchOptions: { signal: ctx.signal },
    }).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: 'text', text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
